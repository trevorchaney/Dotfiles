#
# .shell_commons
#
# Includes common settings betwenn bash, zsh and others.

# If not running interactively, don't do anything.
[[ $- != *i* ]] && return

# Show banner if it exsists
[ -f ~/.banner ] && . ~/.banner

# Include .profile if it exists.
#[ -f ~/.profile ] && . ~/.profile

# Include aliases definitions if they exist.
[ -f ~/.aliases ] && . ~/.aliases

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# For setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# NOTE: Setting HISTSIZE to -1 may cause an issue with reverse-i-search.
HISTSIZE=10000000
HISTFILESIZE=$HISTSIZE
SAVEHIST=$HISTSIZE

# Don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# Don't consider certain characters part of the word
WORDCHARS=${WORDCHARS//\/[&.;]}

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Always show the contents after a change directory
cd() {
    builtin cd "$@" && ls --color=auto;
}

# Print terminal colors
term_colors() {
    local fgc bgc vals seq0

    printf "Color escapes are %s\n" '\e[${value};...;${value}m'
    printf "Values 30..37 are \e[33mforeground colors\e[m\n"
    printf "Values 40..47 are \e[43mbackground colors\e[m\n"
    printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

    # foreground colors
    for fgc in {30..37}; do
        # background colors
        for bgc in {40..47}; do
            fgc=${fgc#37} # white
            bgc=${bgc#40} # black

            vals="${fgc:+$fgc;}${bgc}"
            vals=${vals%%;}

            seq0="${vals:+\e[${vals}m}"
            printf " %-9s" "${seq0:-(default)}"
            printf " ${seq0}TEXT\e[m"
            printf "\e[${vals:+${vals+$vals;}}1mBOLD\e[m"
        done
        echo
    done
}

# Open gdb in split tmux windows
gdb-tmux() {
    local id="$(tmux split-pane -hPF "#D" "tail -f /dev/null")"
    tmux last-pane
    local tty="$(tmux display-message -p -t "$id" '#{pane_tty}')"
    gdb -ex "dashboard -output $tty" "$@"
    tmux kill-pane -t "$id"
}

# ex - archive extractor
# usage: ex <file>
ex() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Diff whole directories with vim
dirdiff() {
    # Shell-escape each path
    DIR1=$(printf '%q' "$1"); shift
    DIR2=$(printf '%q' "$1"); shift
    \vim $@ -c "DirDiff $DIR1 $DIR2"
}

colorgrid() {
    iter=16
    while [ $iter -lt 52 ]
    do
        second=$[$iter+36]
        third=$[$second+36]
        four=$[$third+36]
        five=$[$four+36]
        six=$[$five+36]
        seven=$[$six+36]
        if [ $seven -gt 250 ];then seven=$[$seven-251]; fi

        echo -en "\033[38;5;$(echo $iter)m█ "
        printf "%03d" $iter
        echo -en "\033[38;5;$(echo $second)m█ "
        printf "%03d" $second
        echo -en "\033[38;5;$(echo $third)m█ "
        printf "%03d" $third
        echo -en "\033[38;5;$(echo $four)m█ "
        printf "%03d" $four
        echo -en "\033[38;5;$(echo $five)m█ "
        printf "%03d" $five
        echo -en "\033[38;5;$(echo $six)m█ "
        printf "%03d" $six
        echo -en "\033[38;5;$(echo $seven)m█ "
        printf "%03d" $seven

        iter=$[$iter+1]
        printf '\r\n'
    done
}

proctimer() {
    if [ ! $1 ]; then
        echo "Usage: proctimer <process-name>";
    else
      date;
      while [ `pgrep $1`> /dev/null ]; do sleep 1; done;
      echo "$1 finished at `date`";
    fi
}


## Exports
#
export LS_COLORS='ow=33;42'

# Set PATH variable
export PATH="$PATH:~/.config/node_modules_global/bin:/usr/include:/opt/cuda/bin:~/.local/share/gem/ruby/3.0.0/bin"

# Set default text editor to vim.
export VISUAL=nvim
export EDITOR=$VISUAL
export TERMINAL="urxvt"
# export TERMINAL="gnome-terminal"

# Color man pages
export LESS_TERMCAP_mb=$'\e[01;32m'
export LESS_TERMCAP_md=$'\e[01;31m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;47;30m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[01;36m'
export LESS=-r

# Set nnn plugin keybindings and fifo set up.
export NNN_PLUG='f:finder;o:fzopen;j:autojump;p:mocplay;d:diffs;t:nmount;v:imgview;i:preview-tui'
export NNN_FIFO='/tmp/nnn.fifo'
export NNN_USE_EDITOR=$VISUAL

# FZF settings.
export FD_OPTIONS="--hidden --follow --exclude .git --exclude node_modules --exclude .vim"
export FZF_DEFAULT_COMMAND="fd --type f --type l $FD_OPTIONS"
export FZF_CTRL_T_COMMAND="fd $FD_OPTIONS"
export FZF_ALT_C_COMMAND="fd --type d $FD_OPTIONS"
export FZF_DEFAULT_OPTS="--no-mouse --height 50% -1 --reverse --multi --inline-info --preview='[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || (bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -300' --preview-window='right:wrap' --bind='f3:execute(bat --style=numbers {} || less -f {}),f2:toggle-preview,ctrl-d:half-page-down,ctrl-u:half-page-up,ctrl-a:select-all+accept,ctrl-y:execute-silent(echo {+} | pbcopy)'"

export BAT_PAGER="less -R"

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Work related enviornemnt settings
if [ ${APC_HOME:-null}=null ]; then
    export APC_HOME=/home/tlc/adsi/current
fi
if [ ${ATS_HOME:-null}=null ]; then
    export ATS_HOME=/home/tlc/adsi/current
fi
if [ ${ADSI_HOME:-null}=null ]; then
    export ADSI_HOME=/home/tlc/adsi/current
fi

if [ -e /home/tlc/.nix-profile/etc/profile.d/nix.sh ]; then . /home/tlc/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
